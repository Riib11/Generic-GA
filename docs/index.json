{"repository_name":"github.com/Riib11/Generic-GA","body":"# Generic GA\n\nA generic genetic algorithm implementation. Using Crystal.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  generic_ga:\n    github: riib11/generic-ga\n```\n\n## Usage\n\n```crystal\nrequire \"generic_ga\"\n\nworld = GenericGA::World.new 10   # make a world with 100 agents\nworld.simulate 100                # simulate 100 selections, with console feedback\n```\n\n\n## Development\n\nTODO\n\n## Contributing\n\n1. Fork it ( https://github.com/riib11/generic-ga/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [[riib11]](https://github.com/riib11) Henry - creator, maintainer\n","program":{"html_id":"github.com/Riib11/Generic-GA/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/Riib11/Generic-GA","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Riib11/Generic-GA/GenericGA","path":"GenericGA.html","kind":"module","full_name":"GenericGA","name":"GenericGA","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"generic_ga/version.cr","line_number":1,"url":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga/version.cr"},{"filename":"generic_ga.cr","line_number":5,"url":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr"}],"repository_name":"github.com/Riib11/Generic-GA","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"GENE_COUNT","value":"100","doc":null,"summary":null},{"name":"INHERIT_CHANCE","value":"0.5","doc":null,"summary":null},{"name":"MUTATION_CHANCE","value":"0.1","doc":null,"summary":null},{"name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/Riib11/Generic-GA/GenericGA/Agent","kind":"struct","full_name":"GenericGA::Agent","name":"Agent"},{"html_id":"github.com/Riib11/Generic-GA/GenericGA/World","kind":"struct","full_name":"GenericGA::World","name":"World"}],"namespace":null,"doc":"TODO: Write documentation for `GenericGA`","summary":"<p><span class=\"flag orange\">TODO</span>  Write documentation for <code><a href=\"GenericGA.html\">GenericGA</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"bool_to_int(b:Bool):Int32-instance-method","html_id":"bool_to_int(b:Bool):Int32-instance-method","name":"bool_to_int","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bool"}],"args_string":"(b : Bool) : Int32","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L33","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L33","def":{"name":"bool_to_int","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if b\n  return 1\nend\nreturn 0\n"}},{"id":"fitness_function(chromosome:Chromosome):Fitness-instance-method","html_id":"fitness_function(chromosome:Chromosome):Fitness-instance-method","name":"fitness_function","doc":"Calculates the fitness of a given chromosome.","summary":"<p>Calculates the fitness of a given chromosome.</p>","abstract":false,"args":[{"name":"chromosome","doc":null,"default_value":"","external_name":"chromosome","restriction":"Chromosome"}],"args_string":"(chromosome : Chromosome) : Fitness","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L39","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L39","def":{"name":"fitness_function","args":[{"name":"chromosome","doc":null,"default_value":"","external_name":"chromosome","restriction":"Chromosome"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Fitness","visibility":"Public","body":"f = 0\nchromosome.map do |gene|\n  f = f + (bool_to_int(gene))\nend\nreturn f\n"}},{"id":"make_chromosome:Chromosome-instance-method","html_id":"make_chromosome:Chromosome-instance-method","name":"make_chromosome","doc":"Creates an empty chromosome (initialized array).","summary":"<p>Creates an empty chromosome (initialized array).</p>","abstract":false,"args":[],"args_string":" : Chromosome","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L24","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L24","def":{"name":"make_chromosome","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Chromosome","visibility":"Public","body":"Chromosome.new(GENE_COUNT)"}},{"id":"make_random_chromosome:Chromosome-instance-method","html_id":"make_random_chromosome:Chromosome-instance-method","name":"make_random_chromosome","doc":"Creates a chromosome filled with random gene values.","summary":"<p>Creates a chromosome filled with random gene values.</p>","abstract":false,"args":[],"args_string":" : Chromosome","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L29","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L29","def":{"name":"make_random_chromosome","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Chromosome","visibility":"Public","body":"Chromosome.new(GENE_COUNT) do\n  make_random_gene\nend"}},{"id":"make_random_gene:Gene-instance-method","html_id":"make_random_gene:Gene-instance-method","name":"make_random_gene","doc":"Creates a random gene value.","summary":"<p>Creates a random gene value.</p>","abstract":false,"args":[],"args_string":" : Gene","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L14","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L14","def":{"name":"make_random_gene","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Gene","visibility":"Public","body":"Random.new.next_bool"}},{"id":"mutate_gene(g:Gene):Gene-instance-method","html_id":"mutate_gene(g:Gene):Gene-instance-method","name":"mutate_gene","doc":"Mutates a gene","summary":"<p>Mutates a gene</p>","abstract":false,"args":[{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Gene"}],"args_string":"(g : Gene) : Gene","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L19","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L19","def":{"name":"mutate_gene","args":[{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Gene"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Gene","visibility":"Public","body":"!g"}}],"macros":[],"types":[{"html_id":"github.com/Riib11/Generic-GA/GenericGA/Agent","path":"GenericGA/Agent.html","kind":"struct","full_name":"GenericGA::Agent","name":"Agent","abstract":false,"superclass":{"html_id":"github.com/Riib11/Generic-GA/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"},{"html_id":"github.com/Riib11/Generic-GA/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Riib11/Generic-GA/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Riib11/Generic-GA/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"generic_ga.cr","line_number":46,"url":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr"}],"repository_name":"github.com/Riib11/Generic-GA","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"},"doc":"An agent in the simulation. Has a chromosome and some useful functions.","summary":"<p>An agent in the simulation.</p>","class_methods":[],"constructors":[{"id":"new(randomize=false)-class-method","html_id":"new(randomize=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"randomize","doc":null,"default_value":"false","external_name":"randomize","restriction":""}],"args_string":"(randomize = <span class=\"n\">false</span>)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L50","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L50","def":{"name":"new","args":[{"name":"randomize","doc":null,"default_value":"false","external_name":"randomize","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(randomize)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"chromosome:Chromosome-instance-method","html_id":"chromosome:Chromosome-instance-method","name":"chromosome","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Chromosome","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L48","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L48","def":{"name":"chromosome","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Chromosome","visibility":"Public","body":"@chromosome"}},{"id":"chromosome=(chromosome:Chromosome)-instance-method","html_id":"chromosome=(chromosome:Chromosome)-instance-method","name":"chromosome=","doc":null,"summary":null,"abstract":false,"args":[{"name":"chromosome","doc":null,"default_value":"","external_name":"chromosome","restriction":"Chromosome"}],"args_string":"(chromosome : Chromosome)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L48","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L48","def":{"name":"chromosome=","args":[{"name":"chromosome","doc":null,"default_value":"","external_name":"chromosome","restriction":"Chromosome"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@chromosome = chromosome"}},{"id":"dna:Array(Int32)-instance-method","html_id":"dna:Array(Int32)-instance-method","name":"dna","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L63","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L63","def":{"name":"dna","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@chromosome.map do |gene|\n  bool_to_int(gene)\nend"}},{"id":"fitness:Fitness-instance-method","html_id":"fitness:Fitness-instance-method","name":"fitness","doc":"Calculates agent's fitness","summary":"<p>Calculates agent's fitness</p>","abstract":false,"args":[],"args_string":" : Fitness","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L59","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L59","def":{"name":"fitness","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Fitness","visibility":"Public","body":"fitness_function(@chromosome)"}}],"macros":[],"types":[]},{"html_id":"github.com/Riib11/Generic-GA/GenericGA/Chromosome","path":"GenericGA/Chromosome.html","kind":"alias","full_name":"GenericGA::Chromosome","name":"Chromosome","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"generic_ga.cr","line_number":7,"url":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr"}],"repository_name":"github.com/Riib11/Generic-GA","program":false,"enum":false,"alias":true,"aliased":"Array(Bool)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Riib11/Generic-GA/GenericGA/Fitness","path":"GenericGA/Fitness.html","kind":"alias","full_name":"GenericGA::Fitness","name":"Fitness","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"generic_ga.cr","line_number":8,"url":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr"}],"repository_name":"github.com/Riib11/Generic-GA","program":false,"enum":false,"alias":true,"aliased":"Int32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Riib11/Generic-GA/GenericGA/Gene","path":"GenericGA/Gene.html","kind":"alias","full_name":"GenericGA::Gene","name":"Gene","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"generic_ga.cr","line_number":6,"url":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr"}],"repository_name":"github.com/Riib11/Generic-GA","program":false,"enum":false,"alias":true,"aliased":"Bool","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Riib11/Generic-GA/GenericGA/World","path":"GenericGA/World.html","kind":"struct","full_name":"GenericGA::World","name":"World","abstract":false,"superclass":{"html_id":"github.com/Riib11/Generic-GA/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"},{"html_id":"github.com/Riib11/Generic-GA/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Riib11/Generic-GA/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Riib11/Generic-GA/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"generic_ga.cr","line_number":68,"url":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr"}],"repository_name":"github.com/Riib11/Generic-GA","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Riib11/Generic-GA/GenericGA","kind":"module","full_name":"GenericGA","name":"GenericGA"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":"Initialized population with random agents, and an array to keep track of their fitnesses.","summary":"<p>Initialized population with random agents, and an array to keep track of their fitnesses.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L75","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L75","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"choose_parents:Tuple(Int32,Int32)-instance-method","html_id":"choose_parents:Tuple(Int32,Int32)-instance-method","name":"choose_parents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Tuple(Int32, Int32)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L105","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L105","def":{"name":"choose_parents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, Int32)","visibility":"Public","body":"total_fitness = @fitnesses.sum\nmin_fitness = @fitnesses.min\nrandom = Random.new\nfitness_indecies = Array.new(@size) do |i|\n  0\nend\ni = 0\n@fitnesses.map do |f|\n  total_fitness = total_fitness + f\n  fitness_indecies[i] = total_fitness\n  i = i + 1\nend\nchoice1 = random.rand(total_fitness)\np1 = 0\ni = 0\nfitness_indecies.map do |f|\n  if f < choice1\n    p1 = i\n  end\n  i = i + 1\nend\nchoice2 = random.rand(total_fitness)\nwhile (choice2 - choice1).abs < min_fitness\n  choice2 = random.rand(total_fitness)\nend\np2 = 0\ni = 0\nfitness_indecies.map do |f|\n  if f < choice2\n    p2 = i\n  end\n  i = i + 1\nend\nreturn {p1, p2}\n"}},{"id":"crossover(p1,p2:Int32):Nil-instance-method","html_id":"crossover(p1,p2:Int32):Nil-instance-method","name":"crossover","doc":"Exchanges some genes between two agents's chromosomes","summary":"<p>Exchanges some genes between two agents's chromosomes</p>","abstract":false,"args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":""},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Int32"}],"args_string":"(p1, p2 : Int32) : Nil","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L160","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L160","def":{"name":"crossover","args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":""},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"a, b = @population[p1], @population[p2]\nrandom = Random.new\nGENE_COUNT.times do |gene|\n  if random.rand < INHERIT_CHANCE\n    tmp = a.chromosome[gene]\n    a.chromosome[gene] = mutate(b.chromosome[gene])\n    b.chromosome[gene] = mutate(tmp)\n  end\nend\nupdate_fitness(p1)\nupdate_fitness(p2)\n"}},{"id":"fitnesses:Array(Int32)-instance-method","html_id":"fitnesses:Array(Int32)-instance-method","name":"fitnesses","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L71","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L71","def":{"name":"fitnesses","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fitnesses"}},{"id":"max_agent:Agent-instance-method","html_id":"max_agent:Agent-instance-method","name":"max_agent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Agent","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L95","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L95","def":{"name":"max_agent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Agent","visibility":"Public","body":"max = @population[0]\n@population.map do |agent|\n  if agent.fitness > max.fitness\n    max = agent\n  end\nend\nmax\n"}},{"id":"max_fitness:Fitness-instance-method","html_id":"max_fitness:Fitness-instance-method","name":"max_fitness","doc":"Gets the fitness of the agent with the max fitness in the population.","summary":"<p>Gets the fitness of the agent with the max fitness in the population.</p>","abstract":false,"args":[],"args_string":" : Fitness","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L91","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L91","def":{"name":"max_fitness","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Fitness","visibility":"Public","body":"@fitnesses.max"}},{"id":"mutate(g:Gene):Gene-instance-method","html_id":"mutate(g:Gene):Gene-instance-method","name":"mutate","doc":"Chance of mutating a gene.","summary":"<p>Chance of mutating a gene.</p>","abstract":false,"args":[{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Gene"}],"args_string":"(g : Gene) : Gene","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L181","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L181","def":{"name":"mutate","args":[{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Gene"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Gene","visibility":"Public","body":"if Random.new.rand < MUTATION_CHANCE\n  return mutate_gene(g)\nelse\n  return g\nend"}},{"id":"population:Array(GenericGA::Agent)-instance-method","html_id":"population:Array(GenericGA::Agent)-instance-method","name":"population","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(GenericGA::Agent)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L70","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L70","def":{"name":"population","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@population"}},{"id":"selection:Nil-instance-method","html_id":"selection:Nil-instance-method","name":"selection","doc":"Picks two agents (weighted by fitness) from the population\nto reproduce, yielding two new agents that replace them","summary":"<p>Picks two agents (weighted by fitness) from the population to reproduce, yielding two new agents that replace them</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L148","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L148","def":{"name":"selection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"p1, p2 = choose_parents\ncrossover(p1, p2)\n"}},{"id":"simulate(steps:Int32)-instance-method","html_id":"simulate(steps:Int32)-instance-method","name":"simulate","doc":null,"summary":null,"abstract":false,"args":[{"name":"steps","doc":null,"default_value":"","external_name":"steps","restriction":"Int32"}],"args_string":"(steps : Int32)","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L80","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L80","def":{"name":"simulate","args":[{"name":"steps","doc":null,"default_value":"","external_name":"steps","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"steps.times do |i|\n  puts(\"[Generation #{i}] Max Fitness: #{self.max_fitness}\")\n  selection\nend\nputs(\"--------------------------------------\")\nputs(\"Grand Max Fitness: #{self.max_fitness}\")\nputs(\"Winning Genes:     #{self.max_agent.dna}\")\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L72","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L72","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size"}},{"id":"update_fitness(i:Int32):Nil-instance-method","html_id":"update_fitness(i:Int32):Nil-instance-method","name":"update_fitness","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"args_string":"(i : Int32) : Nil","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L155","source_link":"https://github.com/Riib11/Generic-GA/blob/c2fdda6da501ebaad9a254195eeefd76deb7e174/src/generic_ga.cr#L155","def":{"name":"update_fitness","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@fitnesses[i] = @population[i].fitness"}}],"macros":[],"types":[]}]}]}}